{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","Tweetbox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsIcon","EmailIcon","BookmarkIcon","FormatListBulletedIcon","PersonIcon","MoreHorizIcon","Button","variant","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Tweetbox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","placeholder","type","onClick","preventDefault","collection","add","displayName","userName","verified","timestamp","FieldValue","serverTimestamp","image","avatar","Post","alt","fontSize","Feed","posts","setPosts","useEffect","orderBy","onSnapshot","snapshot","docs","map","doc","data","post","Widgets","tweetId","sourceType","screenName","options","height","url","via","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84698f92.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./SidebarOption.css\"\r\n\r\n//Icon is capital because it is a component. Good naming scheme \r\nfunction SidebarOption({active, text, Icon}){\r\n    //More explanation on string interpolation: https://stackoverflow.com/questions/66037375/react-jsx-styling\r\n    return(\r\n        <div className={`sidebarOption ${active ? 'sidebarOption--active' : '' }`}>\r\n            <Icon />\r\n            <h2 className=\"SidebarOptionText\">{text}</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default SidebarOption;","import React from 'react'\r\nimport './Sidebar.css'\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\"\r\nimport SidebarOption from \"./SidebarOption\"\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nfunction Sidebar(){\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <TwitterIcon className=\"sidebar_TwitterIcon\"/>\r\n            <SidebarOption active text=\"Home\" Icon={HomeIcon}/>\r\n            <SidebarOption text=\"Explore\" Icon={SearchIcon}/>\r\n            <SidebarOption text=\"Notifications\" Icon={NotificationsIcon}/>\r\n            <SidebarOption text=\"Messages\" Icon={EmailIcon}/>\r\n            <SidebarOption text=\"Bookmarks\" Icon={BookmarkIcon}/>\r\n            <SidebarOption text=\"Lists\" Icon={FormatListBulletedIcon}/>\r\n            <SidebarOption text=\"Profile\" Icon={PersonIcon}/>\r\n            <SidebarOption text=\"More\" Icon={MoreHorizIcon}/>\r\n            \r\n            <Button variant=\"outlined\" className=\"sidebar_tweet\" >Tweet</Button>\r\n        </div>        \r\n        //We're using material UI's button so that we get that cool ripple effect animation ^\r\n    )\r\n\r\n}\r\nexport default Sidebar;","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDqDOjJhnGjfLwURsVWaNHLo8RsHkrJpTQ\",\r\n    authDomain: \"taruntwitterclone.firebaseapp.com\",\r\n    projectId: \"taruntwitterclone\",\r\n    storageBucket: \"taruntwitterclone.appspot.com\",\r\n    messagingSenderId: \"722802449228\",\r\n    appId: \"1:722802449228:web:bab53994724f52d21acde9\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\n\r\n  export default db;\r\n  /*\r\n  npm i firebase\r\n\r\n\r\n\r\n  */","import React, {useState} from 'react'\r\nimport './Tweetbox.css'\r\nimport {Avatar, Button} from \"@material-ui/core\"\r\nimport db from \"./firebase.js\"\r\nimport firebase from \"firebase\";\r\n\r\nfunction Tweetbox(){\r\n    const [tweetMessage, setTweetMessage] = useState(\"\");\r\n    const [tweetImage, setTweetImage] = useState(\"\");\r\n\r\n    const sendTweet = (e) => {\r\n        //Whenever you submit a form, it auto reloads the page. We want to stop that\r\n        e.preventDefault();\r\n        db.collection(\"posts\").add({\r\n            displayName: \"Public User\",\r\n            userName: \"@public_user\",\r\n            verified: false,\r\n            text: tweetMessage,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            image: tweetImage,\r\n            avatar: \"https://i.imgur.com/J2NT0Vd.jpg\"\r\n        })\r\n\r\n        setTweetMessage(\"\");\r\n        setTweetImage(\"\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"tweetBox\">\r\n            <form className=\"tweetBox_form\">\r\n                <div className=\"tweetBox_input\">\r\n                    <Avatar src=\"https://i.imgur.com/J2NT0Vd.jpg\"></Avatar>\r\n                    \r\n                    <input \r\n                    onChange={e => setTweetMessage(e.target.value)}\r\n                    value={tweetMessage}\r\n                    placeholder=\"What's happening?\" \r\n                    type=\"text\"\r\n                    ></input>\r\n                </div>\r\n                <input \r\n                onChange={e => setTweetImage(e.target.value)}\r\n                value={tweetImage}\r\n                className=\"tweetbox_inputImage\"\r\n                placeholder=\"Enter Image URL\" type=\"text\"></input>\r\n                \r\n                <Button onClick={sendTweet} className=\"tweetBox_button\">Tweet</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Tweetbox;","import React from \"react\"\r\nimport './Post.css'\r\nimport {Avatar} from \"@material-ui/core\"\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\n\r\nfunction Post({\r\n    displayName,\r\n    userName,\r\n    verified,\r\n    text,\r\n    image,\r\n    avatar\r\n}){\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post_avatar\">\r\n                <Avatar src={avatar}></Avatar>\r\n            </div>\r\n            <div className=\"post_body\">\r\n                <div className=\"post_header\">\r\n                    <div className=\"post_headerText\">\r\n                        <h3>{displayName} {\" \"}\r\n                            <span className=\"post_heading_userName\">\r\n                                {verified ? <VerifiedUserIcon className=\"post_badge\"></VerifiedUserIcon> : \"\"} {userName}\r\n                            </span>\r\n                        </h3>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"post_headerDescription\">\r\n                    <p>{text}</p>\r\n                </div>\r\n\r\n                <img src={image} alt=\"\" />\r\n                <div className=\"post__footer\">\r\n                    <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                    <RepeatIcon fontSize=\"small\" />\r\n                    <FavoriteBorderIcon fontSize=\"small\" />\r\n                    <PublishIcon fontSize=\"small\" />\r\n                 </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {useState, useEffect} from 'react'\r\nimport './Feed.css'\r\nimport Tweetbox from './Tweetbox'\r\nimport Post from './Post'\r\nimport db from \"./firebase\"\r\nfunction Feed(){\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n    //Whenever the firebase database changes, it runs this method\r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) =>\r\n            //Loops through all the posts and adds the data into an array\r\n          setPosts(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n      }, []);\r\n\r\n    return(\r\n        <div className=\"feed\">\r\n            {/*Home header*/}\r\n            <div className=\"feed_header\">\r\n                <h2>Home</h2>\r\n            </div>\r\n            {/*Tweet Box*/}\r\n            <Tweetbox></Tweetbox>\r\n\r\n            {/*Feed*/}\r\n            \r\n            {posts.map(post => (\r\n                <Post \r\n                    displayName={post.displayName} \r\n                    userName={post.userName}\r\n                    verified={post.verified}\r\n                    text={post.text}\r\n                    image={post.image}\r\n                    avatar={post.avatar}/>\r\n                \r\n            ))}\r\n            {/*Feed...*/}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;","import React from 'react'\r\nimport \"./Widgets.css\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n  } from \"react-twitter-embed\";\r\nfunction Widgets() {\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"outsideInput\">\r\n                <div className=\"widgets_input\">\r\n                    <SearchIcon className=\"widgets_searchIcon\"/>\r\n                    <input placeholder=\"Search Twitter\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"widgets_widgetContainer\">\r\n                <h2>What's Happening?</h2>\r\n                <TwitterTweetEmbed tweetId={\"871518451172618242\"} />\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"profile\"\r\n                    screenName=\"My_World_Rules\"\r\n                    options={{ height: 400 }}\r\n                />\r\n                <TwitterShareButton\r\n                    url={\"https://facebook.com/cleverprogrammer\"}\r\n                    options={{ text: \"#reactjs is awesome\", via: \"cleverqazi\" }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import './App.css';\nimport Sidebar from \"./Sidebar\"\nimport Feed from \"./Feed\"\nimport Widgets from \"./Widgets\"\nfunction App() {\n  return (\n   <div className=\"app\">\n      <Sidebar></Sidebar>\n      <Feed />\n      <Widgets />\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}